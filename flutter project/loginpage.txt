import 'package:intl/intl.dart';
import 'dart:async';
import 'package:flutter/material.dart';

class Loginpage extends StatefulWidget {
  const Loginpage({super.key});

  @override
  State<Loginpage> createState() => _LoginpageState();
}

class _LoginpageState extends State<Loginpage> {

  TextEditingController txt1 = TextEditingController();
  TextEditingController txt3 = TextEditingController();
  TextEditingController txt2 = TextEditingController();
  TextEditingController txt4 = TextEditingController();

  DateTime selectDate = DateTime.now();

  Future<Null> _selectDate(BuildContext context) async{
    final DateTime? picked = await showDatePicker(
      context: context,
       initialDate: selectDate,
        firstDate: DateTime(1915, 8),
         lastDate: DateTime(2122)
    );

    if(picked != null && picked != selectDate){
      setState(() {
        selectDate = picked;
      });
    }
  }

  String? gender;

  @override
  Widget build(BuildContext context) {

    String resultDate = DateFormat('dd-MM-yyyy').format(selectDate);

    return Scaffold(
      appBar: AppBar(
        title: const Text("Login Page"),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        child: Padding(
        padding: const EdgeInsets.all(15),
          child: Center(
            child: Column(
              children: [
                Container(
                  margin: const EdgeInsets.only(top: 25),
                  child:const Text("Sing up",
                  style: TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                    color: Colors.blue
                    ),
                  ),
                ),
      
                const SizedBox(height: 20,),
                Row(
                  children: [
                    Flexible(
                      child:TextField( 
                        controller: txt1,
                        decoration: InputDecoration(
                          hintText: "First name",
                          contentPadding: const EdgeInsets.all(10),
                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)
                          )
                        ),
                      )
                    ),
                    const SizedBox(width: 10,),
                    Flexible(
                      child: TextField(
                        controller: txt2,
                        decoration: InputDecoration(
                          hintText: "Last name",
                          contentPadding: const EdgeInsets.all(10),
                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10)
                          )
                        ),
                      )
                    ),
                  ],
                ),
      
                const SizedBox(height: 15,),
      
                TextField( 
                  controller: txt3,
                  decoration: InputDecoration(
                  hintText: "Email",
                  contentPadding: const EdgeInsets.all(10),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10)
                    )
                  ),
                ),
      
                const SizedBox(height: 10,),
      
                TextField( 
                 controller: txt4,
                  decoration: InputDecoration(
                  hintText: "Mobile Number",
                  contentPadding: const EdgeInsets.all(10),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10)
                    )
                  ),
                ),
      
                const SizedBox(height: 10,),
              
                Row(
                  children: [
                    Expanded(
                      child: RadioListTile(
                        title: Text("Male"),
                        value: "male",
                        groupValue: gender,
                        onChanged: (value){
                          setState(() {
                            gender = value.toString();
                          }
                          );
                        }
                      ),
                    ),

                    Expanded(
                      child: RadioListTile(
                        title: Text("Female"),
                        value: "female",
                        groupValue: gender,
                        onChanged: (value) {
                          setState(() {
                            gender = value.toString();
                          }
                        );
                        },
                      )
                    )
                  ],
                ),

                const SizedBox(height: 10,),

                Row(
                  children: [
                    ElevatedButton(onPressed:
                     () {
                      _selectDate(context);
                     }, child: const Text("Birth Date")
                    ),
                    const SizedBox(width: 15,),
                    Text('$selectDate'),
                  ],
                ),
      
                const SizedBox(height: 20,),
      
                ElevatedButton(
                  onPressed: () {
                    _checkdata();
                  },
                  child: const Text("Register")
                  )
              ],
            ),
          ),
        ),
      )
    );
  }

     void _checkdata() {
      String first = txt1.text;
      String last = txt2.text;
      String name = first + last;
      if(first == 'vivek' && last == 'hirani'){
        Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => Success(text: name,))
      );
      }
      else{
        Navigator.push(context,
         MaterialPageRoute(builder: (context) => FailAuthentication()));
      }
    }
}



class Success extends StatelessWidget {
  
  final String? text;

  Success({Key? key, @required this.text}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Login success"),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
             Text("Login succesfuly.. \n By :- $text",
            style: const TextStyle(
              fontSize: 25,
              color: Colors.green
             ),
            ),

            const SizedBox(height: 20,),
            ElevatedButton(
              onPressed: () {
                Navigator.pop(context);
              },
              child: const Text("Go back"),
            ), 

            
          ],
        ),
      ),
      drawer: Drawer(
        child: ListView(
          padding: const EdgeInsets.all(1),
          children: const [
            DrawerHeader(
              decoration: BoxDecoration(
                color: Colors.green
              ),
              child: Text("drawer list")
              ),
            ListTile(
              title: Text("Security"),
              trailing: Icon(Icons.security),
              leading: Icon(Icons.arrow_right),
            )
          ],
        ),
      ),
    );
  }
}

class FailAuthentication extends StatelessWidget {
  const FailAuthentication({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("login data"),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: const[
            Text("You have enterd wrong data :(",
            style: TextStyle(
              fontSize: 25,
              color: Colors.red
            ),)
          ],
        ),
      ),
    );
  }
}